using System.Reflection;

namespace Chase.CrashReporter;

/// <summary>
/// Represents the options for configuring the CrashReportHandler.
/// </summary>
public sealed class CrashReportHandlerOptions
{
    /// <summary>
    /// Gets or sets the output directory for the crash reports.
    /// </summary>
    public string OutputDirectory { get; set; } = AppContext.BaseDirectory;

    /// <summary>
    /// Gets or sets a value indicating whether to write the stack trace in the crash report.
    /// </summary>
    public bool WriteStackTrace { get; set; } = true;

    /// <summary>
    /// The name of the application.
    /// </summary>
    /// <remarks>
    /// The application name is used in the crash report generated by the <see cref="CrashReport"/> class.
    /// </remarks>
    public string ApplicationName { get; set; } = "";

    /// <summary>
    /// Represents the version of the application.
    /// </summary>
    public Version ApplicationVersion { get; set; } = Assembly.GetExecutingAssembly().GetName().Version ?? new Version(0, 0, 0, 0);

    /// <summary>
    /// Gets or sets a value indicating whether the crash report should be written to the console.
    /// </summary>
    public bool WriteToConsole { get; set; }

    /// <summary>
    /// Gets or sets a value indicating whether to write the crash report to a file.
    /// </summary>
    /// <value><c>true</c> if the crash report should be written to a file; otherwise, <c>false</c>.</value>
    public bool WriteToFile { get; set; }

    /// <summary>
    /// Gets or sets a value indicating whether the crash report should be written to the debug log.
    /// </summary>
    public bool WriteToDebugLog { get; set; }

    /// <summary>
    /// Represents the options for the crash report handler.
    /// </summary>
    public string? GithubRepositoryUrl { get; set; }
}